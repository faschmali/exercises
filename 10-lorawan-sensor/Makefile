# name of your application
APPLICATION = lorawan_sensor

# Turn on developer helpers
DEVELHELP ?= 1

# If no BOARD is found in the environment, use this default:
BOARD ?= nucleo-l152re

ifdef DBG_ID_LW
  DEBUG_ADAPTER_ID=$(DBG_ID_COAP)
  PORT=/dev/ttyACM0
endif

ifdef BOARD_LW
  BOARD=$(BOARD_LW)
endif

# Path to the RIOT base directory
RIOTBASE ?= ../RIOT

# Include board's default network devices and auto-initialization of GNRC
# interfaces
USEMODULE += netdev_default
USEMODULE += auto_init_gnrc_netif

# Add support for Event Threads
USEMODULE += event_thread

# Add support for GNRC LoRaWAN (v1.0.3)
USEMODULE += gnrc_lorawan

# Uncomment/comment as needed if a board doesn't include a LoRa radio by default
USEMODULE += sx1272
# USEMODULE += sx1276

# Tell GNRC to encode LoRaWAN port in the GNRC netif header.
# This allows us to use `gnrc_txtsnd` to send data from the shell using the
# `txtsnd` command.
# Note: From Release 22.01 all GNRC LoRaWAN packets will include the netif
# header. Therefore this flag will be removed after that

CFLAGS += -DCONFIG_GNRC_NETIF_LORAWAN_NETIF_HDR

# We can reduce the size of the packet buffer for LoRaWAN, since there's no IP
# support. This will reduce RAM consumption.
# Set GNRC_PKTBUF_SIZE via CFLAGS if not being set via Kconfig.
ifndef CONFIG_GNRC_PKTBUF_SIZE
  CFLAGS += -DCONFIG_GNRC_PKTBUF_SIZE=512
endif
#
# Set region
CFLAGS += -DCONFIG_LORAMAC_REGION_EU_868
#
# If commented, the default value (DR0) is used. Note this value is also used for the OTAA.
CFLAGS += -DCONFIG_LORAMAC_DEFAULT_DR_5

include $(RIOTBASE)/Makefile.include
